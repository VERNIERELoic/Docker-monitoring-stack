version: '3.7'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: monitoring_prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alertmanager/alert.rules/alerts.rules.yml:/alertmanager/alert.rules/alerts.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=365d'
      - '--web.external-url=http://IP:9090'
    environment:
      - url=http://localhost:9090
    expose:
      - 9090
    ports:
      - 9090:9090
    links:
      - node-exporter:node-exporter

  node-exporter:
    image: prom/node-exporter:latest
    container_name: monitoring_node_exporter
    restart: unless-stopped
    environment: 
      - url=http://domaine:9100
    expose:
      - 9100
    ports:
      - 9100:9100

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    deploy:
      replicas: 1
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - ./alertmanager/templates/default.tmpl:/etc/alertmanager/templates/default.tmpl
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    ports:
      - '9093:9093'


  grafana:
    image: grafana/grafana:latest
    container_name: monitoring_grafana
    restart: unless-stopped
    links:
      - prometheus:prometheus
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - url=http://localhost:3000
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
    expose: 
      - 3000
    ports: 
      - 3000:3000
  
  caddy:
    image: caddy:2.4.3-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - /var/run/docker.sock:/var/run/docker.sock
      - ./caddy/data:/data
    restart: unless-stopped

  mariadb:
    image: mariadb
    command: --max-allowed-packet=64MB
    restart: always
    volumes:
      - db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=YOURPASSWD
    
  matomo:
    image: matomo
    restart: always
    volumes:
      - ./data/matomo/config:/var/www/html/config
      - ./logs:/var/www/html/logs
      - matomo:/var/www/htmlmato
    environment:
      - MATOMO_DATABASE_HOST=db
    ports:
      - 8000:80
    
volumes:
  grafana-data:
  db:
  matomo:
